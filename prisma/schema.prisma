generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["tracing"]
}

datasource db {
  provider = "mongodb"
  url      = env("MONGO_DB")
}

model GuildConfiguration {
  id       String                           @id @default(auto()) @map("_id") @db.ObjectId
  guild_id String                           @unique
  general  GuildConfigurationGeneral
  premium  GuildConfigurationGeneralPremium
}

type GuildConfigurationGeneral {
  locale       String  @default("EN")
  timezone     String  @default("UTC")
  use_12_hours Boolean @default(false)
}

type GuildConfigurationGeneralPremium {
  enabled    Boolean @default(false)
  expires_at Int     @default(0)
}

model ClientVoucher {
  id         String               @id @default(auto()) @map("_id") @db.ObjectId
  voucher_id String               @unique
  general    ClientVoucherGeneral
}

enum ClientVoucherType {
  MONTH
  INFINITE
}

type ClientVoucherGeneral {
  type       ClientVoucherType @default(MONTH)
  is_claimed Boolean           @default(false)
}

model UserWarn {
  id         String          @id @default(auto()) @map("_id") @db.ObjectId
  guild_id   String
  general    UserWarnGeneral
  created_at DateTime        @default(now())

  @@unique([general.warn_id])
}

type UserWarnGeneral {
  user_id      String
  warn_id      String
  moderator_id String
  reason       String @default("No reason")
}

model GuildSuggestion {
  id       String                 @id @default(auto()) @map("_id") @db.ObjectId
  guild_id String                 @unique
  general  GuildSuggestionGeneral
  review   GuildSuggestionReview
}

type GuildSuggestionGeneral {
  channel_id    String
  use_messages  Boolean @default(false)
  use_images    Boolean @default(false)
  use_self_vote Boolean @default(true)
  use_threads   Boolean @default(false)
  use_forums    Boolean @default(false)
  thread_id     String?
}

type GuildSuggestionReview {
  channel_id String
  enabled    Boolean @default(false)
}

model UserSuggestion {
  id         String                @id @default(auto()) @map("_id") @db.ObjectId
  guild_id   String
  general    UserSuggestionGeneral
  votes      UserSuggestionVotes
  created_at DateTime              @default(now())

  @@unique([general.message_id, general.suggestion_id])
}

enum UserSuggestionStatus {
  PENDING
  APPROVED
  DENIED
  IN_PENDING_REVIEW
}

type UserSuggestionGeneral {
  message_id    String
  user_id       String
  suggestion_id String
  title         String               @default("New Suggestion")
  content       String
  status        UserSuggestionStatus @default(PENDING)
  images        String[]             @default([])
  comments      String[]             @default([])
}

type UserSuggestionVotes {
  up   String[] @default([])
  down String[] @default([])
}
