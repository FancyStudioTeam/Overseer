model UserKanbanBoard {
  administratorIds String[]                 @default([])
  createdAt        DateTime                 @default(now())
  creatorId        String
  id               String                   @unique
  objectId         String                   @id @default(auto()) @map("_id") @db.ObjectId
  sections         UserKanbanBoardSection[]
  title            String
  updatedAt        DateTime                 @updatedAt
  userIds          String[]                 @default([])

  @@index([creatorId, id])
}

model UserKanbanBoardTask {
  assignedByIds String[]                    @default([])
  createdAt     DateTime                    @default(now())
  creatorId     String
  description   String
  id            String                      @unique
  objectId      String                      @id @default(auto()) @map("_id") @db.ObjectId
  priority      UserKanbanBoardTaskPriority @default(Low)
  section       UserKanbanBoardSection      @relation(fields: [sectionId], references: [id], onDelete: Cascade)
  sectionId     String
  title         String
  updatedAt     DateTime                    @updatedAt

  @@index([creatorId, id, sectionId])
}

model UserKanbanBoardSection {
  board       UserKanbanBoard       @relation(fields: [boardId], references: [id], onDelete: Cascade)
  boardId     String
  color       String                @default("#ffffff")
  createdAt   DateTime              @default(now())
  description String                @default("Tasks related to this section.")
  id          String                @unique
  objectId    String                @id @default(auto()) @map("_id") @db.ObjectId
  position    Int                   @default(1)
  tasks       UserKanbanBoardTask[]
  title       String
  updatedAt   DateTime              @updatedAt

  @@index([boardId, id])
}

enum UserKanbanBoardTaskPriority {
  High
  Low
  Medium
}
